<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.e3mall.mapper.TbReciveAddressMapper" >
  <resultMap id="BaseResultMap" type="cn.e3mall.pojo.TbReciveAddress" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="recive_name" property="reciveName" jdbcType="VARCHAR" />
    <result column="recive_province" property="reciveProvince" jdbcType="VARCHAR" />
    <result column="recive_city" property="reciveCity" jdbcType="VARCHAR" />
    <result column="recive_area" property="reciveArea" jdbcType="VARCHAR" />
    <result column="recive_address" property="reciveAddress" jdbcType="VARCHAR" />
    <result column="telphone" property="telphone" jdbcType="VARCHAR" />
    <result column="mobile" property="mobile" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="isdefault" property="isdefault" jdbcType="TINYINT" />
    <result column="addr_name" property="addrName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, recive_name, recive_province, recive_city, recive_area, recive_address, 
    telphone, mobile, email, isdefault, addr_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.e3mall.pojo.TbReciveAddressExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_recive_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_recive_address
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_recive_address
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.e3mall.pojo.TbReciveAddressExample" >
    delete from tb_recive_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.e3mall.pojo.TbReciveAddress" >
    insert into tb_recive_address (id, user_id, recive_name, 
      recive_province, recive_city, recive_area, 
      recive_address, telphone, mobile, 
      email, isdefault, addr_name
      )
    values (#{id,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{reciveName,jdbcType=VARCHAR}, 
      #{reciveProvince,jdbcType=VARCHAR}, #{reciveCity,jdbcType=VARCHAR}, #{reciveArea,jdbcType=VARCHAR}, 
      #{reciveAddress,jdbcType=VARCHAR}, #{telphone,jdbcType=VARCHAR}, #{mobile,jdbcType=VARCHAR}, 
      #{email,jdbcType=VARCHAR}, #{isdefault,jdbcType=TINYINT}, #{addrName,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="cn.e3mall.pojo.TbReciveAddress" >
    insert into tb_recive_address
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="reciveName != null" >
        recive_name,
      </if>
      <if test="reciveProvince != null" >
        recive_province,
      </if>
      <if test="reciveCity != null" >
        recive_city,
      </if>
      <if test="reciveArea != null" >
        recive_area,
      </if>
      <if test="reciveAddress != null" >
        recive_address,
      </if>
      <if test="telphone != null" >
        telphone,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="isdefault != null" >
        isdefault,
      </if>
      <if test="addrName != null" >
        addr_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="reciveName != null" >
        #{reciveName,jdbcType=VARCHAR},
      </if>
      <if test="reciveProvince != null" >
        #{reciveProvince,jdbcType=VARCHAR},
      </if>
      <if test="reciveCity != null" >
        #{reciveCity,jdbcType=VARCHAR},
      </if>
      <if test="reciveArea != null" >
        #{reciveArea,jdbcType=VARCHAR},
      </if>
      <if test="reciveAddress != null" >
        #{reciveAddress,jdbcType=VARCHAR},
      </if>
      <if test="telphone != null" >
        #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isdefault != null" >
        #{isdefault,jdbcType=TINYINT},
      </if>
      <if test="addrName != null" >
        #{addrName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.e3mall.pojo.TbReciveAddressExample" resultType="java.lang.Integer" >
    select count(*) from tb_recive_address
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_recive_address
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.reciveName != null" >
        recive_name = #{record.reciveName,jdbcType=VARCHAR},
      </if>
      <if test="record.reciveProvince != null" >
        recive_province = #{record.reciveProvince,jdbcType=VARCHAR},
      </if>
      <if test="record.reciveCity != null" >
        recive_city = #{record.reciveCity,jdbcType=VARCHAR},
      </if>
      <if test="record.reciveArea != null" >
        recive_area = #{record.reciveArea,jdbcType=VARCHAR},
      </if>
      <if test="record.reciveAddress != null" >
        recive_address = #{record.reciveAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.telphone != null" >
        telphone = #{record.telphone,jdbcType=VARCHAR},
      </if>
      <if test="record.mobile != null" >
        mobile = #{record.mobile,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null" >
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.isdefault != null" >
        isdefault = #{record.isdefault,jdbcType=TINYINT},
      </if>
      <if test="record.addrName != null" >
        addr_name = #{record.addrName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_recive_address
    set id = #{record.id,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      recive_name = #{record.reciveName,jdbcType=VARCHAR},
      recive_province = #{record.reciveProvince,jdbcType=VARCHAR},
      recive_city = #{record.reciveCity,jdbcType=VARCHAR},
      recive_area = #{record.reciveArea,jdbcType=VARCHAR},
      recive_address = #{record.reciveAddress,jdbcType=VARCHAR},
      telphone = #{record.telphone,jdbcType=VARCHAR},
      mobile = #{record.mobile,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      isdefault = #{record.isdefault,jdbcType=TINYINT},
      addr_name = #{record.addrName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.e3mall.pojo.TbReciveAddress" >
    update tb_recive_address
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="reciveName != null" >
        recive_name = #{reciveName,jdbcType=VARCHAR},
      </if>
      <if test="reciveProvince != null" >
        recive_province = #{reciveProvince,jdbcType=VARCHAR},
      </if>
      <if test="reciveCity != null" >
        recive_city = #{reciveCity,jdbcType=VARCHAR},
      </if>
      <if test="reciveArea != null" >
        recive_area = #{reciveArea,jdbcType=VARCHAR},
      </if>
      <if test="reciveAddress != null" >
        recive_address = #{reciveAddress,jdbcType=VARCHAR},
      </if>
      <if test="telphone != null" >
        telphone = #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isdefault != null" >
        isdefault = #{isdefault,jdbcType=TINYINT},
      </if>
      <if test="addrName != null" >
        addr_name = #{addrName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.e3mall.pojo.TbReciveAddress" >
    update tb_recive_address
    set user_id = #{userId,jdbcType=BIGINT},
      recive_name = #{reciveName,jdbcType=VARCHAR},
      recive_province = #{reciveProvince,jdbcType=VARCHAR},
      recive_city = #{reciveCity,jdbcType=VARCHAR},
      recive_area = #{reciveArea,jdbcType=VARCHAR},
      recive_address = #{reciveAddress,jdbcType=VARCHAR},
      telphone = #{telphone,jdbcType=VARCHAR},
      mobile = #{mobile,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      isdefault = #{isdefault,jdbcType=TINYINT},
      addr_name = #{addrName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>